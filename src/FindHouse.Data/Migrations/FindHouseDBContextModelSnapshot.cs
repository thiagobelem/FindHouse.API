// <auto-generated />
using System;
using FindHouse.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FindHouse.Data.Migrations
{
    [DbContext(typeof(FindHouseDBContext))]
    partial class FindHouseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FindHouse.Business.Models.Anunciante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Creci")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Anunciantes");
                });

            modelBuilder.Entity("FindHouse.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ImovelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImovelId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("FindHouse.Business.Models.Imovel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnuncianteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AreaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AreaUtil")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Banheiros")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("Garagens")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quartos")
                        .HasColumnType("int");

                    b.Property<int>("Suites")
                        .HasColumnType("int");

                    b.Property<int>("TipoContrato")
                        .HasColumnType("int");

                    b.Property<int>("TipoImovel")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorCondominio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AnuncianteId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("FindHouse.Business.Models.Endereco", b =>
                {
                    b.HasOne("FindHouse.Business.Models.Imovel", "Imovel")
                        .WithOne("Endereco")
                        .HasForeignKey("FindHouse.Business.Models.Endereco", "ImovelId")
                        .IsRequired();

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("FindHouse.Business.Models.Imovel", b =>
                {
                    b.HasOne("FindHouse.Business.Models.Anunciante", "Anunciante")
                        .WithMany("Imoveis")
                        .HasForeignKey("AnuncianteId")
                        .IsRequired();

                    b.Navigation("Anunciante");
                });

            modelBuilder.Entity("FindHouse.Business.Models.Anunciante", b =>
                {
                    b.Navigation("Imoveis");
                });

            modelBuilder.Entity("FindHouse.Business.Models.Imovel", b =>
                {
                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
